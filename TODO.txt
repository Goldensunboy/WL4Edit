Bugs:

- Some data in WL4Edit that is specific to areas seems to be treated currently as if it's specific to levels, such as tilesets.
- Why doesn't Graphics.drawImage() do anything with images generated by Tile8x8.getImage()? It doesn't draw anything at all even though the dimensions and pixel data are valid and correct upon manual inspection. Use of BufferedImage would probably be faster than using Graphics.fillRect() for every single pixel, as it currently does in Tile8x8.draw()

Milestone:

- Fix the rendering issues for areas that aren't area 0 in its level, but use a different tileset. Seems that tilesets are probably area-specific, instead of level-specific as WL4Edit is coded right now
- Fix certain layer 1 tiles like the frog block tiles from not rendering. Possibly a different, shared tileset? Seems like their graphics are stored in a close, but different part of the videobuffer from level-specific tilesets
- Add layer 0 decoding/rendering (near BG)
- Add layer 3 decoding/rendering (far BG)
- Add layer 2 decoding/rendering (not sure if this data is stored separately from layers 0, 1 and 3)

Milestone:

- Object rendering (probably per difficulty setting?) or at least just boxes to indicate their location. Actually rendering sprites from ROM data instead of hardcoded images would probably be a monumentally difficult task
- Find out how to edit level properties such as which area you start in, your starting X/Y position, level music, scroll boundaries, scroll properties, frog timer amount
- Figure out why some levels like Domino Row don't display all their areas
- Determine how transportation between areas works. Touching warp blocks on the side of the screen, entering doors, entering pipes

Milestone:

- Begin UI work. Ability to open files, and restructuring of internal level/area/map16/palette/8x8tile objects in such a way that is conducive to editing
- Ability to switch between editing different layers, and making certain ones invisible while editing others
- Ability to move or edit objects per difficulty
- Ability to edit warps
- Ability to modify level music, tileset index, map16 index, scroll type, dimensions, starting position, frog timer, palette
- Ability to revert a level from disk

Milestone:

- Ability to expand the ROM, and use the Rom Allocation Tag System (RATS) to mark used areas in expanded data for modified level data (and don't modify the original level data, only what the pointers lead to)
- Add to WL4Edit a small database of the original pointer table values for use in reverting data
- Ability to convert the editor's object representation of the levels to ROM data (as well as compress layer data to WL4's version of RLE), and write them bounded by RATS to expanded ROM space
- Release candidate?

Milestone:

- Work on support for Japanese ROM, and well as Japanese translation to WL4Edit
- Find how music is stored (probably raw 8-bit PCM, and length/samplerate/loop data) and try to add the ability to preview level music or add in your own custom music
- Add in a map16 editor so custom tiles can be used, and possibly look into a way to expand the map16 beyond three 0x100 pages
- Try to add support for per-area or per-level ASM modding, possibly also with the ability to import object files with specific symbols compiled from C/C++/ARM/thumb

